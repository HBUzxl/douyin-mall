// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	auth "github.com/HBUzxl/douyin-mall/atlas/internal/handler/auth"
	cart "github.com/HBUzxl/douyin-mall/atlas/internal/handler/cart"
	product "github.com/HBUzxl/douyin-mall/atlas/internal/handler/product"
	user "github.com/HBUzxl/douyin-mall/atlas/internal/handler/user"
	"github.com/HBUzxl/douyin-mall/atlas/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// test
				Method:  http.MethodGet,
				Path:    "/auth/ping",
				Handler: auth.PingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取购物车
				Method:  http.MethodGet,
				Path:    "/cart",
				Handler: cart.GetCartHandler(serverCtx),
			},
			{
				// 添加商品到购物车
				Method:  http.MethodPost,
				Path:    "/cart/add_product",
				Handler: cart.AddProductToCartHandler(serverCtx),
			},
			{
				// 清空购物车
				Method:  http.MethodPost,
				Path:    "/cart/clear",
				Handler: cart.ClearCartHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 创建商品
				Method:  http.MethodPost,
				Path:    "/product",
				Handler: product.CreateProductHandler(serverCtx),
			},
			{
				// 删除商品
				Method:  http.MethodDelete,
				Path:    "/product",
				Handler: product.DeleteProductHandler(serverCtx),
			},
			{
				// 更新商品
				Method:  http.MethodPut,
				Path:    "/product",
				Handler: product.UpdateProductHandler(serverCtx),
			},
			{
				// 获取商品
				Method:  http.MethodGet,
				Path:    "/product/get",
				Handler: product.GetProductHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/user/auth",
				Handler: user.UserLoginHandler(serverCtx),
			},
			{
				// 添加用户黑名单
				Method:  http.MethodPost,
				Path:    "/user/blacklist",
				Handler: user.UserAddUserBlacklistHandler(serverCtx),
			},
			{
				// 获取用户信息
				Method:  http.MethodGet,
				Path:    "/user/info",
				Handler: user.UserGetUserInfoHandler(serverCtx),
			},
			{
				// 用户退出
				Method:  http.MethodPost,
				Path:    "/user/logout",
				Handler: user.UserLogoutHandler(serverCtx),
			},
			{
				// 刷新token
				Method:  http.MethodPost,
				Path:    "/user/refresh-token",
				Handler: user.UserRefreshTokenHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.UserRegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)
}
