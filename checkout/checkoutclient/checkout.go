// Code generated by goctl. DO NOT EDIT.
// Source: checkout.proto

package checkoutclient

import (
	"context"

	"checkout/checkout"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = checkout.Request
	Response = checkout.Response

	Checkout interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultCheckout struct {
		cli zrpc.Client
	}
)

func NewCheckout(cli zrpc.Client) Checkout {
	return &defaultCheckout{
		cli: cli,
	}
}

func (m *defaultCheckout) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := checkout.NewCheckoutClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
