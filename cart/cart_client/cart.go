// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: cart.proto

package cart_client

import (
	"context"

	"github.com/HBUzxl/douyin-mall/cart/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CartItem      = cart.CartItem
	ClearCartReq  = cart.ClearCartReq
	ClearCartResp = cart.ClearCartResp
	GetCartReq    = cart.GetCartReq
	GetCartResp   = cart.GetCartResp

	Cart interface {
		// 获取购物车
		GetCart(ctx context.Context, in *GetCartReq, opts ...grpc.CallOption) (*GetCartResp, error)
		// 清空购物车
		ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*ClearCartResp, error)
	}

	defaultCart struct {
		cli zrpc.Client
	}
)

func NewCart(cli zrpc.Client) Cart {
	return &defaultCart{
		cli: cli,
	}
}

// 获取购物车
func (m *defaultCart) GetCart(ctx context.Context, in *GetCartReq, opts ...grpc.CallOption) (*GetCartResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.GetCart(ctx, in, opts...)
}

// 清空购物车
func (m *defaultCart) ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*ClearCartResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.ClearCart(ctx, in, opts...)
}
