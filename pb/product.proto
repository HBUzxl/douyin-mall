syntax = "proto3";

package product;
option go_package="./product";

message Product {
  string uuid = 1 [json_name = "uuid"];
  string name = 2 [json_name = "name"];
  int64 price = 3 [json_name = "price"];
  int64 stock = 4 [json_name = "stock"];
  string description = 5 [json_name = "description"];
}

message CreateProductReq {
  string name = 1 [json_name = "name"];
  int64 price = 2 [json_name = "price"];
  int64 stock = 3 [json_name = "stock"];
  string description = 4 [json_name = "description"];
}

message CreateProductResp {
  Product product = 1 [json_name = "product"];
}

message DeleteProductReq {
  string uuid = 1 [json_name = "uuid"];
}

message DeleteProductResp {
  string uuid = 1 [json_name = "uuid"];
}

message GetProductReq {
  string uuid = 1 [json_name = "uuid"];
}

message GetProductResp {
  Product product = 1 [json_name = "product"];
}

message UpdateProductReq {
  Product product = 1 [json_name = "product"];
}

message UpdateProductResp {
  Product product = 1 [json_name = "product"];
}

message GetProductListReq {
  int64 page = 1 [json_name = "page"];
  int64 page_size = 2 [json_name = "page_size"];
  optional string name = 3 [json_name = "name"];
  optional int64 min_price = 4 [json_name = "min_price"];
  optional int64 max_price = 5 [json_name = "max_price"];
}

message GetProductListResp {
  repeated Product products = 1 [json_name = "products"];
  int64 total = 2 [json_name = "total"];
}

service product {
  // 创建商品
  rpc CreateProduct(CreateProductReq) returns(CreateProductResp);
  // 删除商品
  rpc DeleteProduct(DeleteProductReq) returns(DeleteProductResp);
  // 获取商品
  rpc GetProduct(GetProductReq) returns(GetProductResp);
  // 更新商品
  rpc UpdateProduct(UpdateProductReq) returns(UpdateProductResp);
  // 获取商品列表
  rpc GetProductList(GetProductListReq) returns(GetProductListResp);
}
